{"version":3,"sources":["pages/PageNotFound/PageNotFound.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","pages/PeoplePage/PersonLink/PersonLink.tsx","pages/PeoplePage/PeoplePage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["PageNotFound","className","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeoplePage","useState","people","setPeople","isLoading","setLoading","isShowTable","setShowTable","isErrorLoading","setErrorLoading","IsNoPeopleMessage","setNoPeopleMessage","selectedSlug","useParams","findPerson","personName","find","loadPeople","peopleFromServer","map","prev","motherName","fatherName","mother","father","useEffect","born","died","NavBar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.be1c8f96.chunk.js","sourcesContent":["export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonLink } from './PersonLink/PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isShowTable, setShowTable] = useState<boolean>(false);\n  const [isErrorLoading, setErrorLoading] = useState<boolean>(false);\n  const [IsNoPeopleMessage, setNoPeopleMessage] = useState<boolean>(false);\n  const { slug: selectedSlug } = useParams();\n  const findPerson = (personName: string | null) => {\n    return people.find(person => person.name === personName);\n  };\n\n  const loadPeople = async () => {\n    try {\n      setLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer.map(prev => ({\n        ...prev,\n        motherName: prev.motherName || '-',\n        fatherName: prev.fatherName || '-',\n        mother: findPerson(prev.motherName),\n        father: findPerson(prev.fatherName),\n      })));\n\n      if (!peopleFromServer) {\n        setNoPeopleMessage(true);\n      }\n\n      setShowTable(true);\n    } catch {\n      setErrorLoading(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isErrorLoading && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {IsNoPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isShowTable && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning': selectedSlug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? <PersonLink person={person.mother} />\n                        : person.motherName}\n                    </td>\n                    <td>\n                      {person.father\n                        ? <PersonLink person={person.father} />\n                        : person.fatherName}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PageNotFound } from './pages/PageNotFound';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route\n            path=\"*\"\n            element={<PageNotFound />}\n          />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}